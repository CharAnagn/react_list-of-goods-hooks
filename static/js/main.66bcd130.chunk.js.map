{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","isVisible","visibleGoods","goods","sort","firstGood","secondGood","LENGTH","length","ALPHABET","localeCompare","reverse","console","log","getReorderedGoods","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAYL,GAAcG,IAAaP,EAASM,KAChDI,EArCD,SACLC,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOC,GAyBzB,OAvBIJ,GACFG,EAAaE,MAAK,SAACC,EAAWC,GAC5B,OAAQP,GACN,KAAKP,EAASe,OACZ,OAAOF,EAAUG,OAASF,EAAWE,OAEvC,KAAKhB,EAASiB,SACZ,OAAOJ,EAAUK,cAAcJ,GAEjC,QACE,OAAO,MAKXV,GACFM,EAAaS,UAKfC,QAAQC,IAAId,EAAUH,GAEfM,EAQcY,CACnBrB,EACA,CAAEM,WAAUH,eAoBd,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAtBuB,WAC7BjB,EAAYR,EAASiB,WAsBfM,UAAWG,IACT,iBACA,CACE,WAAYnB,IAAaP,EAASiB,WANxC,iCAaA,wBACEO,KAAK,SACLC,QA/BmB,WACzBjB,EAAYR,EAASe,SA+BfQ,UAAWG,IACT,oBACA,CACE,WAAYnB,IAAaP,EAASe,SANxC,4BAaA,wBACES,KAAK,SACLC,QAxCc,WACpBpB,GAAeD,IAwCTmB,UAAWG,IACT,oBACA,CACE,YAAatB,IANnB,qBAaCK,GACC,wBACEe,KAAK,SACLC,QAlDU,WAClBpB,GAAc,GACdG,EAAYR,EAASM,OAiDbiB,UAAU,4BAHZ,sBAUJ,6BACE,6BACGb,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,cC9InBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.66bcd130.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType) {\n    visibleGoods.sort((firstGood, secondGood) => {\n      switch (sortType) {\n        case SortType.LENGTH:\n          return firstGood.length - secondGood.length;\n\n        case SortType.ALPHABET:\n          return firstGood.localeCompare(secondGood);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const isVisible = isReversed || sortType !== SortType.NONE;\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  const handleSortAlphabetical = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleSortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={handleSortAlphabetical}\n          className={cn(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={handleSortByLength}\n          className={cn(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={handleReverse}\n          className={cn(\n            'button is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n        >\n          Reverse\n        </button>\n\n        {isVisible && (\n          <button\n            type=\"button\"\n            onClick={handleReset}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}